<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/10/nuspec.xsd">
  <metadata>
    <id>RogueSharp</id>
    <version>4.0.0-pre</version>
    <title>RogueSharp</title>
    <authors>Faron Bracy</authors>
    <owners>Faron Bracy</owners>
    <licenseUrl>https://bitbucket.org/FaronBracy/roguesharp/</licenseUrl>
    <projectUrl>https://bitbucket.org/FaronBracy/roguesharp/</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>A portable class library for roguelike developers to provide utilities frequently used in roguelikes or 2D tile based games. Inspired by libtcod

    New features:
       * Optimized cave map generator (Thanks to James Neal)
       * Optimized DijkstraShortestPath.FindPath method (Thanks to flend for this update)
       * Multiple new "Try" methods which return null instead of throwing exceptions
       * Diagonal paths can be found by using new constructors on GoalMap and PathFinder
       * Map.GetCellsInCircle and Map.GetBorderCellsInCircle to get cells within a circular radius
    Breaking changes:
       * Point and Rectangle classes are now structs (Thanks to James Neal)
       * Updated all appropriate references to Cell with ICell (Thanks to Courtney Strachan)
       * Map.ComputeFov and Map.AppendFov both return a ReadonlyCollection of ICell instead void
       * The Path returned from PathFinder.ShortestPath now includes the source cell in the returned Path 
       * Map.GetCellsInArea was renamed to Map.GetCellsInSquare
       * Map.GetCellsInRadius was renamed to Map.GetCellsInDiamond</description>
    <summary>A portable class library for roguelike developers to provide utilities frequently used in roguelikes or 2D tile based games. Inspired by libtcod</summary>
    <releaseNotes>New features:
       * Optimized cave map generator (Thanks to James Neal)
       * Optimized DijkstraShortestPath.FindPath method (Thanks to flend for this update)
       * Multiple new "Try" methods which return null instead of throwing exceptions
       * Diagonal paths can be found by using new constructors on GoalMap and PathFinder
       * Map.GetCellsInCircle and Map.GetBorderCellsInCircle to get cells within a circular radius
    Breaking changes:
       * Point and Rectangle classes are now structs (Thanks to James Neal)
       * Updated all appropriate references to Cell with ICell (Thanks to Courtney Strachan)
       * Map.ComputeFov and Map.AppendFov both return a ReadonlyCollection of ICell instead void
       * The Path returned from PathFinder.ShortestPath now includes the source cell in the returned Path
       * Map.GetCellsInArea was renamed to Map.GetCellsInSquare
       * Map.GetCellsInRadius was renamed to Map.GetCellsInDiamond</releaseNotes>
    <copyright>Copyright 2014-2017 Faron Bracy</copyright>
    <tags>roguelike libtcod pathfinding game map random generator field-of-view fog-of-war dice</tags>
  </metadata>
</package>